.\" Copyright 2007-2011 Lars Wirzenius <liw@liw.fi>
.\" 
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\" 
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\" 
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.TH GENBACKUPDATA 1
.SH NAME
genbackupdata \- generate backup test data
.SH SYNOPSIS
.SH DESCRIPTION
.B genbackupdata
generates test data sets for performance testing of backup software.
It creates a directory tree filled with files of different sizes.
The total size and the distribution of sizes between small and big are
configurable.
The program can also modify an existing directory tree by creating new 
files, and deleting, renaming, or modifying existing files. 
This can be used to generate test data for successive generations of backups.
.PP
The program is deterministic: with a given set of parameters (and a given
pre-existing directory tree), it always creates the same output.
This way, it is possible to reproduce backup tests exactly, without having
to distribute the potentially very large test sets.
.PP
The data set consists of plain files and directories.
Files are either small text files or big binary files.
Text files contain the "lorem ipsum" stanza,
binary files contain randomly generated byte streams.
The percentage of file data that is small text or big binary files can be set,
as can the sizes of the respective file types.
.PP
Files and directories are named "fileXXXX" or "dirXXXX", where "XXXX"
is a successive integer, separate successions for files and directories.
There is an upper limit to how many files a directory may contain.
After the file limit is reached, a new sub-directory is created.
The first set of files go into the root directory of the test set.
.PP
You have to give one of the options
.BR \-\-create ,
.BR \-\-delete ,
.BR \-\-rename ,
or
.BR \-\-modify
for the program to do anything.
You can, however, give more than one of them, if
.I DIR
already exists.
(Giving the same option more than once means that only the last instance
is counted.)
.RI ( DIR )
is created if it doesn't exist already.
.SH OPTIONS
.SH EXAMPLES
Create data for the first generation of a backup:
.PP
.RS
genbackupdata \-\-create=10G testdir
.RE
.PP
Modify an existing set of backup data to create a new generation:
.PP
.RS
genbackupdata \-c 5% \-d 2% \-m 5% \-r 0.5% testdir
.RE
.PP
The above command can be run for each new generation.
